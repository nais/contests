apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
  name: contests
  labels:
    {{- include "contests.labels" . | nindent 4 }}
    team: nais
spec:
  accessPolicy:
    inbound:
      rules:
        - application: {{ .Chart.Name }}-blackbox-exporter
  image: "{{ .Values.contests.image.repository }}/{{ .Values.contests.image.name }}:{{ .Chart.Version }}"
  port: 8080
  replicas:
    min: 1
    max: 1
  liveness:
    path: /ping
  readiness:
    path: /ping
  resources:
    limits:
      cpu: 250m
      memory: 256Mi
    requests:
      cpu: 50m
      memory: 64Mi
  {{ if .Values.contests.storage.enabled }}
  env:
    - name: "BUCKET_NAME"
      value: "{{ .Chart.Name }}-{{ .Values.tenant }}-{{ .Values.env }}"
  gcp:
    buckets:
      - name: "{{ .Chart.Name }}-{{ .Values.tenant }}-{{ .Values.env }}"
    sqlInstances:
      - type: POSTGRES_14
        databases:
          - name: contests
  {{ end }}
  {{ if .Values.contests.kafka.enabled }}
  kafka:
    pool: {{ .Values.contests.kafka.pool }}
  {{ end }}
  ingresses:
    {{- toYaml .Values.contests.ingresses | nindent 4 }}

{{ if .Values.contests.accessPolicy.enabled }}
---
apiVersion: nais.io/v1alpha1
kind: Application
metadata:
  labels:
    {{- include "contests.labels" . | nindent 4 }}
    team: nais
  name: contests-noaccess
spec:
  image: "{{ .Values.contests.image.repository }}/{{ .Values.contests.image.name }}:{{ .Chart.Version }}"
  port: 8080
  replicas:
    max: 1
    min: 1
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi
{{ end }}